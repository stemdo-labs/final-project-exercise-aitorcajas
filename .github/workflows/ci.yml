name: CI

on:
  workflow_call:
    inputs:
      entorno:
        type: string
        required: true
      desarrollo:
        type: string
        required: true

jobs:
  tests-backend:
    if: ${{ inputs.entorno == 'production' && inputs.desarrollo == 'backend'}}
    runs-on: ubuntu-latest
    env:
      SPRING_DB_HOST: 4.234.82.132
      SPRING_DB_PORT: ${{ vars.SPRING_DB_PORT }}
      SPRING_DB_NAME: ${{ secrets.SPRING_DB_NAME }}
      SPRING_DB_USER: ${{ secrets.SPRING_DB_USER }}
      SPRING_DB_PASSWORD: ${{ secrets.SPRING_DB_PASSWORD }}
    environment: ${{ inputs.entorno }}
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Maven tests
        run: mvn test
    
  tests-frontend:
    if: ${{ inputs.entorno == 'production' && inputs.desarrollo == 'frontend'}}
    runs-on: ubuntu-latest
    environment: ${{ inputs.entorno }}
    steps:
    - name: Checkout del repositorio
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Run unit tests
      run: npm run test:unit

  ci:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [tests-backend, tests-frontend]
    environment: ${{ inputs.entorno }}
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      - name: Extraer versi√≥n
        id: version
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          if [[ "$REPO_NAME" == *"backend"* ]]; then
            VERSION=$(grep -oP '<version>\K[^\<]+' pom.xml | sed -n '2p')
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "app_version=$VERSION" >> $GITHUB_OUTPUT
          elif [[ "$REPO_NAME" == *"frontend"* ]]; then
            VERSION=$(jq -r '.version' package.json)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "app_version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Cargar el nombre de la imagen
        id: cargar_imagen
        uses: stemdo-labs/final-project-exercise-aitorcajas/.github/actions/action-image@main
        with:
          version: ${{steps.version.outputs.app_version}}
          desarrollo: ${{ inputs.desarrollo }}

      - name: Build de la imagen
        run: |
          docker build -t ${{steps.cargar_imagen.outputs.image_name}} .

      - name: Login Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: acajascr.azurecr.io
          username: ${{ secrets.ARM_CLIENT_ID }}
          password: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Push imagen ACR
        run: |
          docker push ${{steps.cargar_imagen.outputs.image_name}}