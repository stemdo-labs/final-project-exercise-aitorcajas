name: terraform plan && apply

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  TF_VERSION: 1.5.7
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

permissions: 
  pull-requests: write
  contents: write
  issues: write

jobs:
 plan:
  if: github.event_name == 'pull_request'
  runs-on: ubuntu-latest
  steps:
  - name: Set up Node.js
    uses: actions/setup-node@v4
    with:
        node-version: '20'

  - uses: actions/checkout@v3

  - name: 'Terraform Init'
    uses: hashicorp/terraform-github-actions@master
    with:
      tf_actions_version: ${{ env.TF_VERSION }}
      tf_actions_subcommand: 'init'
      tf_actions_working_dir: "./iac"

  - name: 'Terraform Plan'
    id: tf_plan
    uses: hashicorp/terraform-github-actions@master
    with:
      tf_actions_version: ${{ env.TF_VERSION }}
      tf_actions_subcommand: 'plan'
      tf_actions_working_dir: "./iac"

  - name: 'Comentar resultado del Terraform Plan'
    if: github.event_name == 'pull_request'
    uses: actions/github-script@v6
    with:
     script: |
      const planOutput = `\`\`\`\n${{ steps.tf_plan.outputs.tf_actions_plan_output }}\n\`\`\``;
      github.rest.issues.createComment({
       issue_number: context.issue.number,
       owner: context.repo.owner,
       repo: context.repo.repo,
       body: `### Resultado del Terraform Plan:\n${planOutput}`
      });

 apply:
  if: github.event_name == 'push'
  runs-on: ubuntu-latest
  steps:
  - name: Set up Node.js
    uses: actions/setup-node@v4
    with:
        node-version: '20'

  - uses: actions/checkout@v3

  - name: 'Terraform Init'
    uses: hashicorp/terraform-github-actions@master
    with:
     tf_actions_version: ${{ env.TF_VERSION }}
     tf_actions_subcommand: 'init'
     tf_actions_working_dir: "./iac"

  - name: 'Terraform Apply'
    uses: hashicorp/terraform-github-actions@master
    with:
     tf_actions_version: ${{ env.TF_VERSION }}
     tf_actions_subcommand: 'apply'
     tf_actions_working_dir: "./iac"
     tf_actions_auto_approve: true

  - name: Comprobar inventario
    run: |
      cd ansible
      ls

  - name: Agregar y hacer commit del archivo al repositorio
    run: |
      git config --global user.name "aitorcajas"
      git config --global user.email "acajas@stemdo.io"
      git add ./ansible/inventory.ini
      git commit -m "Generar y agregar archivo inventory.ini al repositorio"
