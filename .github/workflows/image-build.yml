name: Buildear imagen

on:
  workflow_call:
      secrets: 
        ARM_CLIENT_ID: 
          required: true
        ARM_CLIENT_SECRET: 
          required: true

jobs:
  build:
    runs-on: runner-stemdo-labs
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout del repositorio
        uses: actions/checkout@v3

      - name: Extraer versi√≥n
        id: version
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          if [[ "$REPO_NAME" == *"backend"* ]]; then
            VERSION=$(grep -oP '<version>\K[^\<]+' pom.xml | sed -n '2p')
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "app_version=$VERSION" >> $GITHUB_OUTPUT
          elif [[ "$REPO_NAME" == *"frontend"* ]]; then
            VERSION=$(jq -r '.version' package.json)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "app_version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Extraer desarrollo
        id: desarrollo
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          if [[ "$REPO_NAME" == *"backend"* ]]; then
            DESARROLLO="backend"
            echo "DESARROLLO=$DESARROLLO" >> $GITHUB_ENV
            echo "app_desarrollo=$DESARROLLO" >> $GITHUB_OUTPUT
          elif [[ "$REPO_NAME" == *"frontend"* ]]; then
            DESARROLLO="frontend"
            echo "DESARROLLO=$DESARROLLO" >> $GITHUB_ENV
            echo "app_desarrollo=$DESARROLLO" >> $GITHUB_OUTPUT
          fi

      - name: Cargar el nombre de la imagen
        id: cargar_imagen
        uses: stemdo-labs/final-project-exercise-aitorcajas/.github/action@main
        with:
          version: ${{steps.version.outputs.app_version}}
          desarrollo: ${{steps.desarrollo.outputs.app_desarrollo}}

      - name: Build de la imagen
        run: |
          docker build -t ${{steps.cargar_imagen.outputs.image_name}} .

      - name: Login Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: acajascr.azurecr.io
          username: ${{ secrets.ARM_CLIENT_ID }}
          password: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Push imagen ACR
        run: |
          docker push ${{steps.cargar_imagen.outputs.image_name}}
