---
- name: Descargar y restaurar base de datos PostgreSQL desde copia de seguridad
  hosts: localhost
  become: yes
  vars_files:
    - variables.yml

  tasks:
    # - name: Copiar archivo a la m치quina remota
    #   ansible.builtin.copy:
    #     src: "{{ backup_file }}"
    #     dest: "{{ backup_file }}"
    #     mode: '0777'

    - name: Descomprimir
      shell: gzip -d /tmp/backup.sql.gz

    # - name: "Crear la base de datos si no existe"
    #   postgresql_db:
    #     state: present
    #     name: "{{ db_name }}"
    #     owner: "{{ db_user }}"
    #   become: yes
    #   become_user: postgres
  
    - name: "Restore the database using psql"
      command: >
        psql -U postgres -d {{ postgres_db }} -f /tmp/backup.sql
      become: yes
      become_user: postgres
      environment:
        PGPASSWORD: "{{ postgres_password }}"


    - name: Verificar la restauraci칩n
      become: true
      shell: |
        psql "postgresql://{{ postgres_user }}:{{ postgres_password }}@localhost:5432/{{ postgres_db }}" -c "\dt"
      register: restore_check
      args:
        executable: /bin/bash

    # - name: Borrar directorio en la m치quina de control
    #   delegate_to: localhost
    #   ansible.builtin.command:
    #     cmd: rm -rf "{{ backup_file }}"

    - name: Mostrar resultado de la restauraci칩n
      debug:
        msg: "Tablas restauradas: {{ restore_check.stdout_lines }}"

    - name: Eliminar el archivo de backup local
      file:
        path: "/tmp/backup.sql"
        state: absent

    - name: Eliminar el archivo de backup local
      file:
        path: "/tmp/backup.sql.gz.enc"
        state: absent